program PrimeiroConsole;

{$APPTYPE CONSOLE}
{$R *.res}

uses
  Horse, Horse.Jhonson, System.JSON, Horse.Commons, System.SysUtils,
  JOSE.Core.JWT, JOSE.Core.Builder;

var
  App: THorse;
  Users: TJSONArray;

begin
  App := THorse.Create(9000);

  App.Use(Jhonson());

  Users := TJSONArray.Create;

  // O que é middle do projeto?

  App.Get('/users',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    begin
      Res.Send<TJSONArray>(Users);
      // Res.Send('pong');
    end);

  App.Post('/audaces/idea/api/v1/user/login/',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    var
      LToken: TJWT;
      LCompactToken: String;
    begin
      LToken := TJWT.Create;
      try
        LToken.Claims.Issuer := 'New Century Gestao da Informacao';
        LToken.Claims.Subject := 'Audaces';
        LToken.Claims.Expiration := Now + 1;
        LCompactToken := TJOSE.SHA256CompactToken('IGORJACOPIDUTRA', LToken);
        Res.Send(LCompactToken)
      finally
          LToken.Free;
      end;
    end);

  App.Post('/users',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    var
      User: TJSONObject;
    begin
      User := Req.Body<TJSONObject>.Clone as TJSONObject;
      Users.AddElement(User);
      Res.Send<TJSONAncestor>(Users.Clone).Status(THTTPStatus.Created);
      // Res.Send('pong');
    end);

  App.Delete('/users/:id',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    var
      Id: Integer;
    begin
      Id := Req.Params.Items['id'].ToInteger;
      Users.Remove(Pred(Id)); // - 1 de forma elegante
      Res.Send<TJSONAncestor>(Users.Clone).Status(THTTPStatus.Created);
      // Res.Send('pong');
    end);

  App.Start;

  { THorse.Get('/ping',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    begin
    Res.Send('pong');
    end);

    THorse.Listen(9000); }

end.
